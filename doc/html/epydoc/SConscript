import os.path

Import('env', 'pyext', 'pyso', 'bin')

epydoc_bin = "/usr/bin/epydoc"
epydoc_opts = "--inheritance grouped --no-private --no-frames --html"

# Build epydoc documentation:
def action_epydoc(target, source, env):
    outdir = os.path.dirname(target[0].path)
    pyext = source[0].path
    bin = source[1].path
    app = "%s %s %s -o %s %s" % (bin, epydoc_bin, epydoc_opts, outdir, pyext)
    return env.Execute(app)

def emit_epydoc(target, source, env):
    outdir = os.path.dirname(target[0].path)
    modname = os.path.splitext(os.path.basename(source[0].path))[0]

    # Temporary hack: should get this by importing or parsing pyext:
    for cls in ('Bin', 'BondClasses', 'Feature', 'HydrogenBondClasses',
                'Library', 'Source', 'Table', 'TableSection', 'TupleClasses'):
        target.append(os.path.join('#' + outdir,
                                   '%s.%s-class.html' % (modname, cls)))
    for cls in ('MDTError', 'FileFormatError'):
        target.append(os.path.join('#' + outdir, '_mdt.%s-class.html' % cls))

    for extra in ('module', 'pysrc'):
        target.append(os.path.join('#' + outdir,
                                   '%s-%s.html' % (modname, extra)))
    for extra in ('api-objects.txt', 'class-tree.html', 'crarr.png',
                  'epydoc.css', 'epydoc.js', 'help.html',
                  'identifier-index.html', 'module-tree.html',
                  'redirect.html'):
        target.append(os.path.join('#' + outdir, extra))
    return target, source

builder_epydoc = Builder(action=action_epydoc, emitter=emit_epydoc)

env.Append(BUILDERS = {'Epydoc': builder_epydoc})

epydoc = env.Epydoc("index.html", (pyext, bin, pyso))

docdir = env['docdir']
env.Install(os.path.join(docdir, 'epydoc'), epydoc)
