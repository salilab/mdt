Import('env', 'modconfig', 'is_wine_platform')

e = env.Copy()
if is_wine_platform(modconfig):
    e.Append(SHLINKFLAGS=' glib-2.0.lib')
else:
    e.ParseConfig('pkg-config --cflags --libs glib-2.0')
e.Append(CPPPATH=modconfig['include'])
e.Append(LIBPATH=modconfig['libpath'])
e.Append(LIBS=modconfig['libs'] + modconfig['libm'])

# Source files
files = ('mdt_exp_transform.c', 'mdt_linear_transform.c', 'util.c',
         'num_recipes.c', 'mdt_error.c', 'mdt_index.c', 'mdt_types.c',
         'mdt_inverse_transform.c', 'mdt_log_transform.c', 'mdt_offset_min.c',
         'mdt_smooth.c', 'mdt_close.c', 'mdt_entropy_hx.c', 'mdt_write.c',
         'mdt_entropy_full.c', 'mdt_normalize.c', 'mdt_integrate.c',
         'mdt_reshape.c', 'mdt_get.c', 'mdt_write_asgl.c', 'mdt_section.c',
         'mdt_feature.c', 'mdt_super_smooth.c', 'mdt_add_alignment.c',
         'mdt_atom_classes.c', 'mdt_hydrogen_bonds.c', 'mdt_stereo.c',
         'mdt_tuples.c', 'mdt_property.c', 'mdt_make.c', 'mdt_copy.c')

# Build a Windows DLL exports file from the public header files:
e.W32Def('libmdt.def', ('mdt.h', 'mdt_error.h', 'mdt_types.h',
                        'mdt_atom_classes.h'))

# Build the shared library
lib = e.SharedLibrary('mdt', files, WIN32DEFPREFIX='lib', WIN32_INSERT_DEF=1,
                      WINDOWSEXPPREFIX='lib')

# Install the shared library
libinst = e.Install(modconfig['libinstall'], lib)
e.Alias('install', libinst)
